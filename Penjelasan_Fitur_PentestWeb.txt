Penjelasan Fitur Aplikasi Pentest Web Flask
============================================

1. Scan Security Headers
------------------------
Deskripsi: Memeriksa header keamanan penting (CSP, HSTS, X-Frame-Options, dsb) pada web target.
Contoh Pengujian: Masukkan URL (misal: https://example.com), centang Security Headers, klik Scan. Cek hasil header yang ada/tidak ada.

2. Scan SSL Certificate
-----------------------
Deskripsi: Memeriksa validitas sertifikat SSL, tanggal berlaku, dan issuer.
Contoh Pengujian: Masukkan URL (misal: https://expired.badssl.com), centang SSL Certificate, klik Scan. Cek status valid/expired.

3. Scan Port (Nmap)
-------------------
Deskripsi: Scan port 1-1000 pada host target, tampilkan port terbuka dan servicenya.
Contoh Pengujian: Masukkan URL (misal: http://scanme.nmap.org), centang Port Scan, klik Scan. Cek daftar port terbuka.

4. Scan SQL Injection (GET)
---------------------------
Deskripsi: Mengirim payload SQLi sederhana ke URL target, deteksi error SQL pada response.
Contoh Pengujian: Masukkan URL (misal: http://testphp.vulnweb.com/listproducts.php?cat=1), centang SQL Injection, klik Scan. Cek payload yang menyebabkan error SQL.

5. Scan XSS (GET)
-----------------
Deskripsi: Mengirim payload XSS ke parameter pada URL target, deteksi apakah payload muncul di response.
Contoh Pengujian: Masukkan URL (misal: http://testphp.vulnweb.com/artists.php?artist=1), centang XSS, klik Scan. Cek payload yang ter-reflect.

6. Scan LFI (GET)
-----------------
Deskripsi: Mengirim payload LFI ke parameter pada URL target, deteksi signature file OS (/etc/passwd, win.ini).
Contoh Pengujian: Masukkan URL (misal: http://testphp.vulnweb.com/showimage.php?file=1.jpg), centang LFI, klik Scan. Cek payload yang berhasil membaca file OS.

7. Deep Scan (XSS, LFI, SQLi Multi-param, GET/POST)
---------------------------------------------------
Deskripsi: Pengujian XSS, LFI, SQLi pada banyak parameter umum (id, q, search, dll) via GET/POST.
Contoh Pengujian: Masukkan URL (misal: http://testphp.vulnweb.com/listproducts.php), centang Deep XSS/LFI/SQLi, klik Scan. Cek hasil pada banyak parameter.

8. Multi-Scan (Batch URL/Subdomain)
-----------------------------------
Deskripsi: Upload file .txt berisi daftar URL/subdomain, scan otomatis semua URL, tampilkan ringkasan hasil.
Contoh Pengujian: Siapkan file urls.txt (isi beberapa URL), upload di form Multi Scan, klik Scan. Cek tabel ringkasan.

9. Dashboard Statistik
----------------------
Deskripsi: Statistik scan (total scan, rata-rata skor, distribusi kategori, rata-rata kriteria, 5 scan terakhir).
Contoh Pengujian: Lakukan beberapa scan, klik Dashboard Statistik, cek grafik dan tabel statistik.

10. Riwayat Scan & Ekspor
-------------------------
Deskripsi: Menyimpan semua hasil scan, bisa dilihat di halaman Riwayat. Tersedia ekspor CSV dan hapus riwayat.
Contoh Pengujian: Lakukan scan, klik Riwayat, klik Ekspor CSV atau Hapus.

11. Ekspor Hasil Scan ke PDF
----------------------------
Deskripsi: Hasil scan bisa diekspor ke PDF lengkap dengan QR code URL dan detail hasil.
Contoh Pengujian: Setelah scan, klik Export PDF di hasil scan.

12. Validasi & Error Handling
----------------------------
Deskripsi: Validasi format URL, tampilkan error jika URL tidak valid/tidak bisa di-resolve/scan error.
Contoh Pengujian: Masukkan URL salah (misal: htp://salah), klik Scan, cek pesan error.

13. Penilaian & Skoring Keamanan
-------------------------------
Deskripsi: Setiap scan menghasilkan skor keamanan (0-100) dan kategori (Aman, Cukup Aman, Rentan) berdasarkan bobot kriteria.
Contoh Pengujian: Scan ke web aman (misal: google.com) dan web rentan (testphp.vulnweb.com), bandingkan skor dan kategori.

Tips Pengujian Custom:
----------------------
- Uji ke aplikasi internal/dev Anda untuk parameter GET/POST berbeda.
- Modifikasi file URL untuk multi-scan sesuai kebutuhan.
- Cek hasil scan deep untuk parameter custom (bisa edit list params di fungsi deep scan di app.py).

Jika ingin penjelasan lebih detail pada fitur tertentu atau contoh payload/parameter custom lain, silakan tanyakan!
